$schema:            http://json-schema.org/draft-04/schema#
title:              "Post Artifact Request"
description: "Request a authorization to put and artifact or posting of a URL as an artifact. Note that the `storageType` property is referenced in the response as well."
oneOf:
  - title:          "S3 Artifact Request"
    description: |
      Request for a signed PUT URL that will allow you to upload an artifact
      to an S3 bucket managed by the queue.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `'s3'`
        type:       string
        enum:
          - s3
      expires:
        description: |
          Date-time after which the artifact should be deleted. Note, that
          these will be collected over time, and artifacts may remain
          available after expiration. S3 based artifacts are identified in
          azure table storage and explicitly deleted on S3 after expiration.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type, when uploading artifact to the signed
          `PUT` URL returned from this request this must given with the
           `ContentType` header. Please, provide correct mime-type,
           this make tooling a lot easier, specifically,
           always using `application/json` for JSON artifacts.
        type:       string
        maxLength:  255
      contentMD5:
        description: |
          Base64 encoded MD5 sum of the artifact. If specified, it **must**
          also be given as value to the `Content-MD5` header when uploading
          to S3.
          **Warning**, this will likely be required in the future, and **must**
          be specified if `contentSHA256` is specified.
        type:       string
        pattern:    {$const: base64-pattern}
        minLength:  24
        maxLength:  24
      contentSHA256:
        description: |
          Base64 encoded SHA-256 sum of the artifact. If specified, it will
          be available as `x-amz-meta-content-sha256` header when people
          download the artifact. This is useful for validating integrity.
          **Warning**, this will likely be required in the future, and **must**
          be specified if `contentMD5` is specified.
        type:       string
        pattern:    {$const: base64-pattern}
        minLength:  44
        maxLength:  44
    additionalProperties: false
    required:
      - storageType
      - expires
      - contentType
      # contentMD5 and contentSHA256 aren't required YET
      # We most port all workers to provide these before we make them required!
  - title:          "Azure Artifact Request"
    description: |
      Request for an Azure Shared Access Signature (SAS) that will allow
      you to upload an artifact to an Azure blob storage container managed
      by the queue.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `azure`
        type:       string
        enum:
          - azure
      expires:
        description: |
          Date-time after which the artifact should be deleted.
          Note, that these will be collected over time, and artifacts may
          remain available after expiration. Azure based artifacts are
          identified in azure table storage and explicitly deleted in the
          azure storage container after expiration.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type, when uploading artifact please use the same
          `Content-Type`, consistently using the correct mime-type make
          tooling a lot easier, specifically, always using `application/json`
          for JSON artifacts.
        type:       string
        maxLength:  255
    additionalProperties: false
    required:
      - storageType
      - expires
      - contentType
  - title:          "Redirect Artifact Request"
    description: |
      Request the queue to redirect to a URL for a given artifact.
      This allows you to reference artifacts that aren't managed by the queue.
      The queue will still authenticate the request, so depending on the level
      of secrecy required, secret URLs **might** work. Note, this is mainly
      useful for public artifacts, for example temporary files directly
      stored on the worker host and only available there for a specific
      amount of time.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `reference`
        type:       string
        enum:
          - reference
      expires:
        description: |
          Date-time after which the queue should no longer redirect to this URL.
          Note, that the queue will and cannot delete the resource your URL
          references, you are responsible for doing that yourself.
        type:       string
        format:     date-time
      contentType:
        description: |
          Artifact mime-type for the resource to which the queue should
          redirect. Please use the same `Content-Type`, consistently using
          the correct mime-type make tooling a lot easier, specifically,
          always using `application/json` for JSON artifacts.
        type:       string
        maxLength:  255
      url:
        description: |
          URL to which the queue should redirect using a `303` (See other)
          redirect.
        type:       string
        format:     uri
    additionalProperties: false
    required:
      - storageType
      - expires
      - url
      - contentType
  - title:          "Error Artifact Request"
    description: |
      Request the queue to reply `403` (forbidden) with `reason` and `message`
      to any `GET` request for this artifact. This is mainly useful as a way
      for a task to declare that it failed to provide an artifact it wanted
      to upload.
    type:           object
    properties:
      storageType:
        description: |
          Artifact storage type, in this case `error`
        type:       string
        enum:
          - error
      expires:
        description: |
          Date-time after which the queue should stop replying with the error
          and forget about the artifact.
        type:       string
        format:     date-time
      reason:
        description: |
          Reason why the artifact doesn't exist.
        type:       string
        enum:
          - file-missing-on-worker
          - invalid-resource-on-worker
          - too-large-file-on-worker
      message:
        description: |
          Human readable explanation of why the artifact is missing
        type:       string
        maxLength:  4096
    additionalProperties: false
    required:
      - storageType
      - expires
      - reason
      - message
